#!/bin/bash
##
## Copyright Â© 2018 Cisco Systems, Inc.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
set -uo pipefail

#################################################
# Add repo bin dir to PATH
#
export PATH=${PATH}:../../bin

#################################################
# Execute Enviroment Checks and Load Reusable Functions
#
source ../../ensure-env.sh

#################################################
# Core variables
#
export CLUSTER_NAME=$(basename ${PWD})
export DEPLOY_DIR=$(pyrealpath ${PWD}/../../)
export KEYBASE_TEAM=$(yq -r .keybase_team vars.yaml)
export KEYBASE_DIR=/keybase/team/${KEYBASE_TEAM}
export TARGET_CONTEXT=$(yq -r .mh.targetContext mh/main.yaml)

#################################################
# Keybase
#
if [ "${TARGET_CONTEXT}" != "docker-for-desktop.example.org" ]; then
  if [ ! -d ${KEYBASE_DIR} ]; then
    echo ${DEP_ERROR}
    echo "You should be registered on keybase.io and added to the team ${KEYBASE_TEAM}"
    echo
    echo "Run the following command to continue once this error has been fixed:"
    echo "  direnv allow"
    echo ${DEP_ERROR}
  fi
fi

#################################################
# KUBECONFIG
#
KUBECONFIG_KEYBASE=${KEYBASE_DIR}/kubeconfig/${CLUSTER_NAME}
KUBECONFIG_LOCAL=~/.kube/${CLUSTER_NAME}

if [ "${TARGET_CONTEXT}" != "docker-for-desktop.example.org" ]; then
  if [ ! -f ${KUBECONFIG_LOCAL} ]; then
    if [ ! -f ${KUBECONFIG_KEYBASE} ]; then
      echo ${DEP_ERROR}
      echo "Failed to find ${KUBECONFIG_KEYBASE}"
      echo
      echo "This error may be benign if the cluster hasn't been created yet"
      echo
      echo "Run the following command to continue once this error has been fixed:"
      echo "  direnv allow"
      echo ${DEP_ERROR}
    else
      cp ${KUBECONFIG_KEYBASE} ${KUBECONFIG_LOCAL}
    fi
  fi
  
  if [ -f ~/.kube/config ]; then
    echo ${DEP_ERROR}
    echo "Current ~/.kube/config should be removed"
    echo "We usually try to keep individual kube configurations in their own files."
    echo
    echo "Please remove the file by running:'rm ~/.kube/config"
    echo
    echo "Run the following command to continue once this error has been fixed"
    echo "  or after the cluster has been created:"
    echo "  direnv allow"
    echo ${DEP_ERROR}
  fi
fi
export KUBECONFIG=${KUBECONFIG_LOCAL}
kubectl config use-context ${TARGET_CONTEXT}

#################################################
# MH (AKA MULTIHELM)
#
export MH_CONFIG=$(pyrealpath ${PWD}/mh/main.yaml)

#################################################
# ITERM2 BADGE
#
# ref: https://www.iterm2.com/documentation-badges.html
if [ $(uname -o) == "Darwin" ] && [ "${TERM_PROGRAM}" == "iTerm.app" ]; then
  printf "\e]1337;SetBadgeFormat=%s\a" $(echo -n "${CLUSTER_NAME}" | base64)
fi
